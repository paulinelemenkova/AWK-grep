#!/bin/bash
# Purpose: grep, awk
#  AWK: C-подобный скриптовый специализированный язык построчного разбора и обработки входного потока (например, текстового файла) по заданным шаблонам (регулярным выражениям). Язык AWK был разработан и реализован как утилита UNIX'а в 1977 году Э.Ахо, П.Вайнбергером и Б.Керниганом. AWK предназначен для обработки структурированных текстовых документов. Он соединяет в себе основные свойства и возможности утилит sed и grep, но одновременно является простым и удобным языком программирования, пригодным для решения широкого спектра простых повседневных задач. Название AWK складывается из инициалов разработчиков языка: Alfred V. Aho, Peter J. Weinberger и Brian W. Kernighan.
# 1. найдет все координаты с 177 град. и впишет точки в новый файл Ab.txt
grep '^177' gshhs_i.txt > Ab.txt
# 2. вывод строки на экран. выход: Ctrl+D
awk '{print "Hello World"}'
# 3. По умолчанию awk назначает следующие переменные каждому полю данных, обнаруженному им в записи:
$0 — представляет всю строку текста (запись).
$1 — первое поле.
$2 — второе поле.
$n — n-ное поле.
# 4. выкусит долготы (1 столбец)
awk '{print $1}' Ab.txt > Alon.txt
# 5. выкусит широты (2 столбец)
awk '{print $2}' Ab.txt > Alat.txt
# 6. чтобы передать awk многострочную команду, нужно разделить её части точкой с запятой:
$ echo "My name is Tom" | awk '{$4="Adam"; print $0}'
# 7. выполнить какие-то действия до того, как скрипт начнёт обработку записей из входного потока. Например — создать шапку отчёта или что-то подобное.
awk 'BEGIN {print "Hello World!"}'
# блоки BEGIN и END
awk 'BEGIN {print "The File Contents:"} {print $0}' Ab.txt
$ awk 'BEGIN {print "The File Contents:"} {print $0} END {print "End of File"}' Ab.txt
